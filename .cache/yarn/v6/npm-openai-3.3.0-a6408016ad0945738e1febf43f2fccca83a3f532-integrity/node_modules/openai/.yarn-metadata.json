{
  "manifest": {
    "name": "openai",
    "version": "3.3.0",
    "description": "Node.js library for the OpenAI API",
    "repository": {
      "type": "git",
      "url": "git@github.com:openai/openai-node.git"
    },
    "keywords": [
      "openai",
      "open",
      "ai",
      "gpt-3",
      "gpt3"
    ],
    "author": {
      "name": "OpenAI"
    },
    "license": "MIT",
    "main": "./dist/index.js",
    "types": "./dist/index.d.ts",
    "scripts": {
      "build": "tsc --outDir dist/"
    },
    "dependencies": {
      "axios": "^0.26.0",
      "form-data": "^4.0.0"
    },
    "devDependencies": {
      "@types/node": "^12.11.5",
      "typescript": "^3.6.4"
    },
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-openai-3.3.0-a6408016ad0945738e1febf43f2fccca83a3f532-integrity/node_modules/openai/package.json",
    "readmeFilename": "README.md",
    "readme": "# OpenAI Node.js Library\n\nThe OpenAI Node.js library provides convenient access to the OpenAI API from Node.js applications. Most of the code in this library is generated from our [OpenAPI specification](https://github.com/openai/openai-openapi).\n\n> ⚠️ **Important note: this library is meant for server-side usage only, as using it in client-side browser code will expose your secret API key. [See here](https://platform.openai.com/docs/api-reference/authentication) for more details.**\n\n## Installation\n\n```bash\nnpm install openai\n```\n\n## Usage\n\nThe library needs to be configured with your account's secret key, which is available in your [OpenAI account page](https://platform.openai.com/account/api-keys). We recommend setting it as an environment variable. Here's an example of initializing the library with the API key loaded from an environment variable and creating a completion:\n\n```javascript\nconst { Configuration, OpenAIApi } = require(\"openai\");\n\nconst configuration = new Configuration({\n  apiKey: process.env.OPENAI_API_KEY,\n});\nconst openai = new OpenAIApi(configuration);\n\nconst chatCompletion = await openai.createChatCompletion({\n  model: \"gpt-3.5-turbo\",\n  messages: [{role: \"user\", content: \"Hello world\"}],\n});\nconsole.log(chatCompletion.data.choices[0].message);\n```\n\nCheck out the [full API documentation](https://platform.openai.com/docs/api-reference?lang=node.js) for examples of all the available functions.\n\n### Request options\n\nAll of the available API request functions additionally contain an optional final parameter where you can pass custom [axios request options](https://axios-http.com/docs/req_config), for example:\n\n```javascript\nconst completion = await openai.createCompletion(\n  {\n    model: \"text-davinci-003\",\n    prompt: \"Hello world\",\n  },\n  {\n    timeout: 1000,\n    headers: {\n      \"Example-Header\": \"example\",\n    },\n  }\n);\n```\n\n### Error handling\n\nAPI requests can potentially return errors due to invalid inputs or other issues. These errors can be handled with a `try...catch` statement, and the error details can be found in either `error.response` or `error.message`:\n\n```javascript\ntry {\n  const completion = await openai.createCompletion({\n    model: \"text-davinci-003\",\n    prompt: \"Hello world\",\n  });\n  console.log(completion.data.choices[0].text);\n} catch (error) {\n  if (error.response) {\n    console.log(error.response.status);\n    console.log(error.response.data);\n  } else {\n    console.log(error.message);\n  }\n}\n```\n\n### Streaming completions\n\nStreaming completions (`stream=true`) are not natively supported in this package yet, but [a workaround exists](https://github.com/openai/openai-node/issues/18#issuecomment-1369996933) if needed.\n\n## Upgrade guide\n\nAll breaking changes for major version releases are listed below.\n\n### 3.0.0\n\n- The function signature of `createCompletion(engineId, params)` changed to `createCompletion(params)`. The value previously passed in as the `engineId` argument should now be passed in as `model` in the params object (e.g. `createCompletion({ model: \"text-davinci-003\", ... })`)\n- Replace any `createCompletionFromModel(params)` calls with `createCompletion(params)`\n\n## Thanks\n\nThank you to [ceifa](https://github.com/ceifa) for creating and maintaining the original unofficial `openai` npm package before we released this official library! ceifa's original package has been renamed to [gpt-x](https://www.npmjs.com/package/gpt-x).\n",
    "licenseText": "The MIT License\n\nCopyright (c) OpenAI (https://openai.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/openai/-/openai-3.3.0.tgz#a6408016ad0945738e1febf43f2fccca83a3f532",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/openai/-/openai-3.3.0.tgz",
    "hash": "a6408016ad0945738e1febf43f2fccca83a3f532",
    "integrity": "sha512-uqxI/Au+aPRnsaQRe8CojU0eCR7I0mBiKjD3sNMzY6DaC1ZVrc85u98mtJW6voDug8fgGN+DIZmTDxTthxb7dQ==",
    "registry": "npm",
    "packageName": "openai",
    "cacheIntegrity": "sha512-uqxI/Au+aPRnsaQRe8CojU0eCR7I0mBiKjD3sNMzY6DaC1ZVrc85u98mtJW6voDug8fgGN+DIZmTDxTthxb7dQ== sha1-pkCAFq0JRXOOH+v0Py/MyoOj9TI="
  },
  "registry": "npm",
  "hash": "a6408016ad0945738e1febf43f2fccca83a3f532"
}